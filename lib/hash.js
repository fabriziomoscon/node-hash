// Generated by CoffeeScript 1.6.3
(function() {
  var Hash;

  Hash = (function() {
    function Hash(prototype) {
      if (typeof prototype !== 'function') {
        throw new TypeError('Invalid prototype');
      }
      this._proto = prototype;
      this.reset();
    }

    Hash.prototype.reset = function() {
      return this._store = {};
    };

    Hash.prototype.set = function(key, object) {
      if (!(typeof key === 'string') || key === '') {
        throw new TypeError('Invalid key');
      }
      if (!(object instanceof this._proto)) {
        throw new TypeError('Invalid member object');
      }
      return this._store[key] = object;
    };

    Hash.prototype.get = function(key) {
      if (!(typeof key === 'string') || key === '') {
        throw new TypeError('Invalid key');
      }
      return this._store[key] || null;
    };

    Hash.prototype.remove = function(key) {
      var value;
      if (!(typeof key === 'string') || key === '') {
        throw new TypeError('Invalid key');
      }
      if (this._store[key] == null) {
        return false;
      }
      value = this._store[key];
      delete this._store[key];
      return value;
    };

    Hash.prototype.count = function() {
      return this.getKeys().length;
    };

    Hash.prototype.getData = function() {
      return this._store;
    };

    Hash.prototype.getKeys = function() {
      return Object.keys(this._store);
    };

    return Hash;

  })();

  module.exports = Hash;

}).call(this);
